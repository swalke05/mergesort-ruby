iBegin: 0
iEnd: 7
calling split left
a: [8, 7, 8, 3, 1, 3, 4]
b: [0, 0, 0, 0, 0, 0, 0]
iBegin: 0
iEnd: 3
calling split left
a: [8, 7, 8, 3, 1, 3, 4]
b: [0, 0, 0, 0, 0, 0, 0]
iBegin: 0
iEnd: 1
calling split right
a: [8, 7, 8, 3, 1, 3, 4]
b: [0, 0, 0, 0, 0, 0, 0]
iBegin: 1
iEnd: 3
calling split left
a: [8, 7, 8, 3, 1, 3, 4]
b: [0, 0, 0, 0, 0, 0, 0]
iBegin: 1
iEnd: 2
calling split right
a: [8, 7, 8, 3, 1, 3, 4]
b: [0, 0, 0, 0, 0, 0, 0]
iBegin: 2
iEnd: 3
calling merge 2 halves
a: [8, 7, 8, 3, 1, 3, 4]
b: [0, 0, 0, 0, 0, 0, 0]
in TopDownMerge
iBegin: 1
iMiddle: 2
iEnd: 3
k = 1
k = 2
calling copy
a: [8, 7, 8, 3, 1, 3, 4]
b: [0, 7, 8, 0, 0, 0, 0]
calling merge 2 halves
a: [8, 7, 8, 3, 1, 3, 4]
b: [0, 7, 8, 0, 0, 0, 0]
in TopDownMerge
iBegin: 0
iMiddle: 1
iEnd: 3
k = 0
k = 1
k = 2
calling copy
a: [8, 7, 8, 3, 1, 3, 4]
b: [7, 8, 8, 0, 0, 0, 0]
calling split right
a: [7, 8, 8, 3, 1, 3, 4]
b: [7, 8, 8, 0, 0, 0, 0]
iBegin: 3
iEnd: 7
calling split left
a: [7, 8, 8, 3, 1, 3, 4]
b: [7, 8, 8, 0, 0, 0, 0]
iBegin: 3
iEnd: 5
calling split left
a: [7, 8, 8, 3, 1, 3, 4]
b: [7, 8, 8, 0, 0, 0, 0]
iBegin: 3
iEnd: 4
calling split right
a: [7, 8, 8, 3, 1, 3, 4]
b: [7, 8, 8, 0, 0, 0, 0]
iBegin: 4
iEnd: 5
calling merge 2 halves
a: [7, 8, 8, 3, 1, 3, 4]
b: [7, 8, 8, 0, 0, 0, 0]
in TopDownMerge
iBegin: 3
iMiddle: 4
iEnd: 5
k = 3
k = 4
calling copy
a: [7, 8, 8, 3, 1, 3, 4]
b: [7, 8, 8, 1, 3, 0, 0]
calling split right
a: [7, 8, 8, 1, 3, 3, 4]
b: [7, 8, 8, 1, 3, 0, 0]
iBegin: 5
iEnd: 7
calling split left
a: [7, 8, 8, 1, 3, 3, 4]
b: [7, 8, 8, 1, 3, 0, 0]
iBegin: 5
iEnd: 6
calling split right
a: [7, 8, 8, 1, 3, 3, 4]
b: [7, 8, 8, 1, 3, 0, 0]
iBegin: 6
iEnd: 7
calling merge 2 halves
a: [7, 8, 8, 1, 3, 3, 4]
b: [7, 8, 8, 1, 3, 0, 0]
in TopDownMerge
iBegin: 5
iMiddle: 6
iEnd: 7
k = 5
k = 6
calling copy
a: [7, 8, 8, 1, 3, 3, 4]
b: [7, 8, 8, 1, 3, 3, 4]
calling merge 2 halves
a: [7, 8, 8, 1, 3, 3, 4]
b: [7, 8, 8, 1, 3, 3, 4]
in TopDownMerge
iBegin: 3
iMiddle: 5
iEnd: 7
k = 3
k = 4
k = 5
k = 6
calling copy
a: [7, 8, 8, 1, 3, 3, 4]
b: [7, 8, 8, 1, 3, 3, 4]
calling merge 2 halves
a: [7, 8, 8, 1, 3, 3, 4]
b: [7, 8, 8, 1, 3, 3, 4]
in TopDownMerge
iBegin: 0
iMiddle: 3
iEnd: 7
k = 0
k = 1
k = 2
k = 3
k = 4
k = 5
k = 6
calling copy
a: [7, 8, 8, 1, 3, 3, 4]
b: [1, 3, 3, 4, 7, 8, 8]
[1, 3, 3, 4, 7, 8, 8]